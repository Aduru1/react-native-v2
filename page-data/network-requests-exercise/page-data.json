{"componentChunkName":"component---src-templates-lesson-template-js","path":"/network-requests-exercise","result":{"data":{"markdownRemark":{"html":"<p>Update your application to fetch the color palettes from the following url: <a href=\"https://color-palette-api.kadikraman.now.sh/palettes\">https://color-palette-api.kadikraman.now.sh/palettes</a></p>\n<p>Hint: you should use <code class=\"language-text\">useEffect</code>, <code class=\"language-text\">useCallback</code> and <code class=\"language-text\">useState</code> for this!</p>\n<h2 id=\"network-requests-exercise-solution-\" style=\"position:relative;\"><a href=\"#network-requests-exercise-solution-\" aria-label=\"network requests exercise solution  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Network Requests Exercise Solution üëÄ</h2>\n<p><a href=\"https://github.com/kadikraman/AwesomeProjectRN/commit/657a8893066e7d3f197941d569c4393ba5321274\">üîó RN 657a889</a></p>\n<p>In this exercise, we've used all 3 hooks we just learnt about!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>palettes<span class=\"token punctuation\">,</span> setPalettes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> handleFetchPalettes <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> palettes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPalettes</span><span class=\"token punctuation\">(</span>palettes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleFetchPalettes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>First, we initialise a <code class=\"language-text\">useState</code> with an empty array to store the fetched color palettes. Make sure to also update the FlatList data prop to use the new <code class=\"language-text\">palettes</code> variable.</p>\n<p>Then we create the actual function that does the network request. The <code class=\"language-text\">fetch</code> keyword works in React Native the same way it does on the web (with the exception that you can't get CORS errors). We fetch the data from the api, check that we received a non-error response, and save the response to the <code class=\"language-text\">palettes</code> variable which will automatically update out UI.</p>\n<p>Finally, we add a <code class=\"language-text\">useEffect</code> which will trigger the <code class=\"language-text\">handleFetchPalettes</code> function when the component is first rendered.</p>","frontmatter":{"path":"/network-requests-exercise","title":"Network Requests Exercise üìù","order":18}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":0,"path":"/intro","title":"Welcome"}}},{"node":{"frontmatter":{"order":1,"path":"/react-native","title":"About React Native"}}},{"node":{"frontmatter":{"order":2,"path":"/the-expo-debate","title":"Should you use Expo or plain React Native?"}}},{"node":{"frontmatter":{"order":3,"path":"/page-2","title":"[Expo] Getting started with Expo"}}},{"node":{"frontmatter":{"order":4,"path":"/setup-rn","title":"[RN] Getting started with plain React Native"}}},{"node":{"frontmatter":{"order":5,"path":"/intro-to-react","title":"Basic React Native components"}}},{"node":{"frontmatter":{"order":6,"path":"/safe-area","title":"Safe Area"}}},{"node":{"frontmatter":{"order":7,"path":"/styling","title":"Styling"}}},{"node":{"frontmatter":{"order":8,"path":"/styling-exercise","title":"Styling Exercise üìù"}}},{"node":{"frontmatter":{"order":9,"path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":10,"path":"/lists","title":"Lists"}}},{"node":{"frontmatter":{"order":11,"path":"/lists-exercise","title":"Lists Exercise üìù"}}},{"node":{"frontmatter":{"order":12,"path":"/navigation-intro","title":"Navigation Into"}}},{"node":{"frontmatter":{"order":13,"path":"/navigation-rn","title":"[RN] Adding navigation with plain React Native"}}},{"node":{"frontmatter":{"order":14,"path":"/navigation-expo","title":"[Expo] Adding navigation with Expo"}}},{"node":{"frontmatter":{"order":15,"path":"/adding-navigation","title":"Adding Navigation"}}},{"node":{"frontmatter":{"order":16,"path":"/navigation-exercise","title":"Navigation Exercise üìù"}}},{"node":{"frontmatter":{"order":17,"path":"/react-hooks","title":"useState, useCallback, useEffect"}}},{"node":{"frontmatter":{"order":18,"path":"/network-requests-exercise","title":"Network Requests Exercise üìù"}}},{"node":{"frontmatter":{"order":19,"path":"/forms","title":"Overview of Forms in React Native"}}},{"node":{"frontmatter":{"order":20,"path":"/forms-exercise","title":"Form exercise üìù"}}},{"node":{"frontmatter":{"order":21,"path":"/code-style","title":"Adding a linter"}}},{"node":{"frontmatter":{"order":22,"path":"/ejecting-from-expo","title":"[Expo] Ejecting from Expo"}}},{"node":{"frontmatter":{"order":23,"path":"/native-modules","title":"[RN] Adding native modules"}}},{"node":{"frontmatter":{"order":24,"path":"/platform-specific-code","title":"Platform Specific Code"}}},{"node":{"frontmatter":{"order":25,"path":"/security","title":"Security"}}}]}},"pageContext":{}}}