{"componentChunkName":"component---src-templates-lesson-template-js","path":"/styling","result":{"data":{"markdownRemark":{"html":"<p>In React Native, all styling is done using inline styles. Let's start by adding some spacing around our content. Import <code class=\"language-text\">StyleSheet</code> from <code class=\"language-text\">react-native</code> and create a styles constant at the bottom of the file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>React Native styles are actually very similar to css styles on the web. The debugger also displays helpful error messages when you try to add styles that don't exist on a particular component type.</p>\n<p><code class=\"language-text\">StyleSheet.create</code> creates an optimized style object where you can access the individual styles like on a regular object. In this case, <code class=\"language-text\">styles.container</code> would give you all the container styles. Now all that's left to do is to pass these styles into the component. We do this using the <code class=\"language-text\">style</code> prop. Pass the container styles into our <code class=\"language-text\">&lt;View&gt;</code>. Your code should now look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// App.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> View<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> SafeAreaView<span class=\"token punctuation\">,</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>SafeAreaView<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> world<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SafeAreaView<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Very stylish! This is pretty similar to the web, only we omit the units (<code class=\"language-text\">px</code>, <code class=\"language-text\">em</code>, <code class=\"language-text\">rem</code> etc), because all dimensions in React Native are unitless, and represent density-independent pixels.</p>\n<p>Adding a background colour for the component while your debugging can help understand positioning. Let's also add a background colour to our View before continuing:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Notice that the style names in React Native are in camelCase instead of kebab-case, but otherwise are the same as the web!</p>\n<p>Now let's try adding different padding to the top and sides? Let's do 50 on the top and 10 on the sides. You might do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    paddingTop<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n    paddingLeft<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    paddingRight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This works well enough, but in React Native we also have a shorthand way to set equal padding to left an right - <code class=\"language-text\">paddingHorizontal</code>. You can replace <code class=\"language-text\">paddingLeft</code> and <code class=\"language-text\">paddingRight</code> with a single <code class=\"language-text\">paddingHorizontal</code> like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    paddingTop<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n    paddingHorizontal<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>There is also <code class=\"language-text\">paddingVertical</code> for setting just top and bottom padding, and there are also equivalent style properties for margin: <code class=\"language-text\">marginHorizontal</code> and <code class=\"language-text\">marginVertical</code>.</p>\n<p><a href=\"https://github.com/kadikraman/AwesomeProjectRN/commit/931eebc6558c65a9c66c6fcb3bbe63386ec0204c\">🔗 RN 931eebc</a></p>\n<h2 id=\"positioning\" style=\"position:relative;\"><a href=\"#positioning\" aria-label=\"positioning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Positioning</h2>\n<p>In React Native, all positioning is done using FlexBox and all elements have <code class=\"language-text\">display: flex</code> applied by default. If you've not used flex much before it may seem a bit daunting, but the basics are not too tricky to grasp. If you have time, <a href=\"https://flexboxfroggy.com/\">FlexBox froggy</a> is a fun little game that introduce you to the flex iteratively while you move frogs around the pond. For everyday reference <a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">this guide</a> from CSS Tricks is pretty handy.</p>\n<p>Let's update our container so that all the text is in the center of the screen. First, let's center the text horizontally.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That was easy! <code class=\"language-text\">alignItems: &#39;center&#39;</code> will center any content inside it horizontally. Now let's also center the content vertically.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This centers the content inside the lavender box. Notice we needed to se the height of the box in order for this to work. But how could we do it so the box is full height? We use <code class=\"language-text\">flex: 1</code>. Adding <code class=\"language-text\">flex: 1</code> to the container itself won't work though, because it means that the component should take the whole height of it's parent, but it's parent is a <code class=\"language-text\">SafeAreaView</code> that has no height. We'll also have to set <code class=\"language-text\">flex: 1</code> to the <code class=\"language-text\">SafeAreaView</code>. Let's try something different and do it <em>inline</em>!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// App.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> View<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> SafeAreaView<span class=\"token punctuation\">,</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>SafeAreaView style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> world<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SafeAreaView<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'lavender'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Great work! Using styles inline is handy especially when you have dynamic styles (e.g having to set the height or colour of the element dynamically), but generally we try to use the StyleSheet for styles, has some optimizations that are lost otherwise.</p>\n<p><a href=\"https://github.com/kadikraman/AwesomeProjectRN/commit/05e9509779347160320075a2cce630c7cbe00636\">🔗 RN 05e9509</a></p>\n<h3 id=\"side-note-styled-components\" style=\"position:relative;\"><a href=\"#side-note-styled-components\" aria-label=\"side note styled components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Side note: Styled Components</h3>\n<p>If you are a fan of styled components, you might be excited to know that they have React Native support! Styling native elements looks pretty much the same as on the web, only instead of:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledDiv <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  background-color: lavender;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You'll have to do:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components/native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledView <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  background-color: lavender;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Otherwise the experience is exactly the same! You can even use <code class=\"language-text\">snake-case</code> like on the web! For this workshop, we will use StyleSheet, buy feel free to explore this in your own time. Read more about it <a href=\"https://styled-components.com/docs/basics#react-native\">here</a>.</p>","frontmatter":{"path":"/styling","title":"Styling","order":7}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":0,"path":"/intro","title":"Welcome"}}},{"node":{"frontmatter":{"order":1,"path":"/react-native","title":"About React Native"}}},{"node":{"frontmatter":{"order":2,"path":"/the-expo-debate","title":"Should you use Expo or plain React Native?"}}},{"node":{"frontmatter":{"order":3,"path":"/page-2","title":"[Expo] Getting started with Expo"}}},{"node":{"frontmatter":{"order":4,"path":"/setup-rn","title":"[RN] Getting started with plain React Native"}}},{"node":{"frontmatter":{"order":5,"path":"/intro-to-react","title":"Basic React Native components"}}},{"node":{"frontmatter":{"order":6,"path":"/safe-area","title":"Safe Area"}}},{"node":{"frontmatter":{"order":7,"path":"/styling","title":"Styling"}}},{"node":{"frontmatter":{"order":8,"path":"/styling-exercise","title":"Styling Exercise 📝"}}},{"node":{"frontmatter":{"order":9,"path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":10,"path":"/lists","title":"Lists"}}},{"node":{"frontmatter":{"order":11,"path":"/lists-exercise","title":"Lists Exercise 📝"}}},{"node":{"frontmatter":{"order":12,"path":"/navigation-intro","title":"Navigation Into"}}},{"node":{"frontmatter":{"order":13,"path":"/navigation-rn","title":"[RN] Adding navigation with plain React Native"}}},{"node":{"frontmatter":{"order":14,"path":"/navigation-expo","title":"[Expo] Adding navigation with Expo"}}},{"node":{"frontmatter":{"order":15,"path":"/adding-navigation","title":"Adding Navigation"}}},{"node":{"frontmatter":{"order":16,"path":"/navigation-exercise","title":"Navigation Exercise 📝"}}},{"node":{"frontmatter":{"order":17,"path":"/react-hooks","title":"useState, useCallback, useEffect"}}},{"node":{"frontmatter":{"order":18,"path":"/network-requests-exercise","title":"Network Requests Exercise 📝"}}},{"node":{"frontmatter":{"order":19,"path":"/forms","title":"Overview of Forms in React Native"}}},{"node":{"frontmatter":{"order":20,"path":"/forms-exercise","title":"Form exercise 📝"}}},{"node":{"frontmatter":{"order":21,"path":"/code-style","title":"Adding a linter"}}},{"node":{"frontmatter":{"order":22,"path":"/ejecting-from-expo","title":"[Expo] Ejecting from Expo"}}},{"node":{"frontmatter":{"order":23,"path":"/native-modules","title":"[RN] Adding native modules"}}},{"node":{"frontmatter":{"order":24,"path":"/platform-specific-code","title":"Platform Specific Code"}}},{"node":{"frontmatter":{"order":25,"path":"/security","title":"Security"}}}]}},"pageContext":{}}}